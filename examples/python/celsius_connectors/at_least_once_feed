#!/usr/bin/env python

"""
An example at-least-once feed with resettable sources that exercises the new
AtLeastOnceSourceConnector and at-least-once protocol.

To run it:

1. start the mock server (TODO: replace with wallaroo app once pony connector is ready)
    ```sh
    python3 server.py
    ```

    The mock server will choose a random offset betwee 0 and 800 for each stream to in its notify_ack. (Since each stream has 1000 total messagrs, each of size 8 bytes, it does so by choosing `random.randint(0,800)*8` as the point_of_ref.)

2. Start the feed:

    ```sh
    ./at_least_once_feed \
        --application-module celsius \
        --connector celsius_feed \
        --celsius_feed-host 127.0.0.1 \
        --celsius_feed-port 7100 \
        --celsius_feed-filenames celsius.msg,celsius.msg.2,celsius.msg.3
    ```
"""

from wallaroo.experimental.connectors import (
                                   FramedFileReader,
                                   MultiSourceConnector)


client = MultiSourceConnector(
        "0.0.1", "Dragons Love Tacos!", "celsius at least once", "instance",
        args=None,
        required_params=['host', 'port', 'filenames'])

# Open a connection with a hello message
client.connect()

params = client.params
filenames = params.filenames.split(',')

# Open FramedFileReader
for fn in filenames:
    client.add_source(FramedFileReader(filename = fn))

# Rely on the iterator method of our connector subclass
client.join()
print("Reached the end of all files. Shutting down.")
print(client._sent)
